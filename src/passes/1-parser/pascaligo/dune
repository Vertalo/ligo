(ocamllex LexToken)

(menhir
 (merge_into Parser)
 (modules ParToken Parser)
 (flags -la 1 --table --strict --explain --external-tokens LexToken))

(library
 (name parser_pascaligo)
 (public_name ligo.parser.pascaligo)
 (modules AST pascaligo Parser ParserLog LexToken)
 (libraries
   menhirLib
   parser_shared
   hex
   simple-utils
   tezos-utils
 )
 (preprocess
   (pps bisect_ppx --conditional))
 (flags (:standard  -open Parser_shared -open Simple_utils))
)

(executable
  (name LexerMain)
  (libraries
     hex
     simple-utils
     tezos-utils
     parser_pascaligo)
  (modules
    LexerMain)
  (preprocess
    (pps bisect_ppx --conditional))
  (flags (:standard -open Parser_shared -open Parser_pascaligo))
)

(executable
  (name ParserMain)
  (libraries
     parser_pascaligo)
  (modules ParserMain)
  (preprocess
    (pps bisect_ppx --conditional))
  (flags (:standard -open Simple_utils -open Parser_shared -open Parser_pascaligo)))

(executable
  (name Unlexer)
  (preprocess
    (pps bisect_ppx --conditional))
  (modules Unlexer))

;; Les deux directives (rule) qui suivent sont pour le dev local.
;; Il suffit de faire "dune build Parser.exe" pour avoir un Parser.exe dans le dossier.
;; Pour le purger, il faut faire "dune clean".
;(rule
;  (targets Parser.exe)
;  (deps ParserMain.exe)
;  (action (copy ParserMain.exe Parser.exe))
;  (mode promote-until-clean))

;(rule
;  (targets Lexer.exe)
;  (deps LexerMain.exe)
;  (action (copy LexerMain.exe Lexer.exe))
;  (mode promote-until-clean))
